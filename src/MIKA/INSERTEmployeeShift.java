/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MIKA;

import MIKA.Mika;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author IRIS
 */
public class INSERTEmployeeShift extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeShift
     */
    public INSERTEmployeeShift() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        esPanel = new javax.swing.JPanel();
        eID = new javax.swing.JLabel();
        eIDField = new javax.swing.JTextField();
        shift = new javax.swing.JLabel();
        sCombo = new javax.swing.JComboBox<>();
        date = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        pos = new javax.swing.JLabel();
        posCombo = new javax.swing.JComboBox<>();
        Submit = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        Status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        eID.setText("Employee ID #");

        shift.setText("Shift worked");

        sCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9 AM - 2 PM", "2 PM - 8 PM", "11 AM - 5 PM", "9 AM - 5 PM", "11 AM - 7 PM", "1 PM - 9 PM" }));

        date.setText("Date worked");

        dateField.setText("YYYY-MM-DD");

        pos.setText("Position worked");

        posCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Server", "Cook", "Dishwasher", "Cashier", "Manager", "Shift Supervisor" }));

        Submit.setText("Insert");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        Exit.setText("Done");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        Status.setText("Status....");

        javax.swing.GroupLayout esPanelLayout = new javax.swing.GroupLayout(esPanel);
        esPanel.setLayout(esPanelLayout);
        esPanelLayout.setHorizontalGroup(
            esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(esPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shift)
                    .addComponent(eID)
                    .addComponent(date)
                    .addComponent(pos))
                .addGap(33, 33, 33)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eIDField)
                        .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addComponent(posCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, esPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Submit)
                .addGap(18, 18, 18)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Status)
                    .addComponent(Exit))
                .addGap(46, 46, 46))
        );
        esPanelLayout.setVerticalGroup(
            esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(esPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eID)
                    .addComponent(eIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shift)
                    .addComponent(sCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pos)
                    .addComponent(posCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(esPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Submit)
                    .addComponent(Exit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Status)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(esPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(esPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
            this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        Mika M = new Mika();
        if(eIDField.getText() == null || eIDField.getText().equals(""))
        {
            Status.setText("Failed. Type in a valid employee ID.");
            return;
        }
        else
        {
            int id = Integer.parseInt(eIDField.getText());
            Boolean validID = null;
            try {
                validID = M.validateEmployee(id);
            } catch (Exception ex) {
                Logger.getLogger(INSERTEmployeeShift.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(validID == false)
            {
                Status.setText("Employee doesn't exist. Try again.");
                return;
            }
        }
        int id = Integer.parseInt(eIDField.getText());
        int sid = sCombo.getSelectedIndex();
        String date = "'" + dateField.getText() + "'";
        int bid = 1;
        int p = posCombo.getSelectedIndex();
        try {
            M.insertIntoEmployeeShift(id, sid, date, bid, p);
            Status.setText("Success");
        } catch (Exception ex) {
            Logger.getLogger(INSERTEmployeeShift.class.getName()).log(Level.SEVERE, null, ex);
            Status.setText("Failed. Try again.");
        }
    }//GEN-LAST:event_SubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(INSERTEmployeeShift.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(INSERTEmployeeShift.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(INSERTEmployeeShift.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(INSERTEmployeeShift.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new INSERTEmployeeShift().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JLabel Status;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel date;
    private javax.swing.JTextField dateField;
    private javax.swing.JLabel eID;
    private javax.swing.JTextField eIDField;
    private javax.swing.JPanel esPanel;
    private javax.swing.JLabel pos;
    private javax.swing.JComboBox<String> posCombo;
    private javax.swing.JComboBox<String> sCombo;
    private javax.swing.JLabel shift;
    // End of variables declaration//GEN-END:variables
}
